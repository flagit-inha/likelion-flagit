# Generated by Django 5.2.5 on 2025-08-20 03:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('crew', '0001_initial'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nickname', models.CharField(max_length=30, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('profile_image', models.URLField(blank=True, null=True)),
                ('flag_count', models.PositiveIntegerField(default=0)),
                ('total_distance', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('visited_at', models.DateTimeField(auto_now_add=True)),
                ('location_lat', models.FloatField()),
                ('location_lng', models.FloatField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('running', '러닝'), ('hiking', '등산'), ('riding', '라이딩')], max_length=10)),
                ('date', models.DateField()),
                ('distance_km', models.FloatField()),
                ('time_record', models.DurationField()),
                ('group_photo', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('crew_members', models.ManyToManyField(blank=True, null=True, related_name='joined_flags', to='crew.crewmember')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='location.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_flags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
